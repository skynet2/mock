on:
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    container: golang:1.24-bullseye
    steps:
      - uses: actions/checkout@v3
      - run: apt-get update && apt install -y curl openssl git openssh-client
      - run: GOOS=windows GOARCH=amd64 go build -buildvcs=false -ldflags "-s -w" -o mockgen.exe ./mockgen
      - run: GOOS=linux GOARCH=amd64 go build -buildvcs=false -ldflags "-s -w" -o mockgen2 ./mockgen
      - run: GOOS=darwin GOARCH=arm64 go build -buildvcs=false -ldflags "-s -w" -o mockgen_darwin_arm64 ./mockgen\
      - run: rm -rf mockgen && mv mockgen2 mockgen
      - name: release
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: false
          prerelease: false
          release_name: v.1.0.${{ github.run_number }}
          tag_name: v.1.0.${{ github.run_number }}
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - name: upload windows artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: mockgen.exe
          asset_name: mockgen.exe
          asset_content_type: application/octet-stream
      - name: upload linux artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: mockgen
          asset_name: mockgen
          asset_content_type: application/octet-stream
      - name: upload mac artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: mockgen_darwin_arm64
          asset_name: mockgen_darwin_arm64
          asset_content_type: application/octet-stream
